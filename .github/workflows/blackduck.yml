# This is a basic workflow to help you get started with Actions

name: CI-Blackduck

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "SIGINT-840-airgap" ]
  pull_request:
    branches: [ "SIGINT-840-airgap" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
   runs-on: [Windows]
#    runs-on: [self-hosted, Windows, kiran]
#    runs-on: [self-hosted, Linux, kishor-linux]

   env:
     MAC_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-bridge/0.3.6/synopsys-bridge-0.3.6-macosx.zip"
     LINUX_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-bridge/0.3.6/synopsys-bridge-0.3.6-linux64.zip"
     WINDOWS_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-bridge/0.3.6/synopsys-bridge-0.3.6-win64.zip"
     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
   steps:
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.4
        with:
          # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x). Early access versions can be specified in the form of e.g. 14-ea, 14.0.0-ea, or 14.0.0-ea.28
          java-version: 11
          check-latest: true
          # The package type (jre, jdk, jdk+fx)
          java-package: jre # optional, default is jdk
          # The architecture (x86, x64) of the package.
          architecture: x64 # optional, default is x64
          # Path to where the compressed JDK is located. The path could be in your source repository or a local path on the agent.
          jdkFile: # optional
          # ID of the distributionManagement repository in the pom.xml file. Default is `github`
          server-id: # optional, default is github
          # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
          server-username: # optional, default is GITHUB_ACTOR
          # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
          server-password: # optional, default is GITHUB_TOKEN
          # Path to where the settings.xml file will be written. Default is ~/.m2.
          settings-path: # optional
          # GPG private key to import. Default is empty string.
          gpg-private-key: # optional
          # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
          gpg-passphrase: # optional
      - run: java -version
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Use synopsys unified-action - blackduck-detect
       # Use the action defined in this repository
        uses: ./
        with:
          blackduck_url: ${{ secrets.BLACKDUCK_URL }}
          blackduck_apiToken: ${{ secrets.BLACKDUCK_API_TOKEN_NEW }}
          bridge_download_url: ${{ env.WINDOWS_BRIDGE_URL }}
          blackduck_scan_failure_severities : "BLOCKER,CRITICAL,MAJOR"
          #blackduck_automation_fixpr: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          include_diagnostics: true
          diagnostics_retention_days: 90
          network_airGap: false
