# This is a basic workflow to help you get started with Actions

name: CI-Polaris

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [ ubuntu-latest ]
    #runs-on: [ self-hosted ]
    # Use ubuntu-latest to run workflow on github hosted runner
    #  runs-on: [ ubuntu-latest ]
    environment: env-test
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- name: Checkout Source
      #  uses: actions/checkout@v3
      - run: echo 'Hi env.POLARIS_SERVER_URL - ${{ env.POLARIS_SERVER_URL }}'
      - run: echo 'Hi vars.POLARIS_SERVER_URL - ${{ vars.POLARIS_SERVER_URL }}'
      - run: echo 'Hi secrets.POLARIS_SERVER_URL - ${{ secrets.POLARIS_SERVER_URL }}'
      - run: echo 'Hi env.POLARIS_ACCESS_TOKEN - ${{ env.POLARIS_ACCESS_TOKEN }}'
      - run: echo 'Hi secrets.POLARIS_ACCESS_TOKEN - ${{ secrets.POLARIS_ACCESS_TOKEN }}'
      - run: echo 'Hi vars.POLARIS_ACCESS_TOKEN - ${{ vars.POLARIS_ACCESS_TOKEN }}'


      #- name: Polaris Scan
        # Use the action defined in this repository
      #  uses: synopsys-sig/synopsys-action@1182

      #  with:
      #    polaris_serverUrl: ${{ env.POLARIS_SERVER_URL }}
      #    polaris_accessToken: ${{ secrets.POLARIS_ACCESS_TOKEN }}
      #    polaris_application_name: ${{ github.event.repository.name }}
      #    polaris_project_name: ${{ github.event.repository.name }}
      #    polaris_assessment_types: "SAST,SCA"
          ### Uncomment below configuration if Synopsys Bridge diagnostic files needs to be uploaded
          # include_diagnostics: true
